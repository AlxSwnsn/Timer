{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["Timer","props","className","digits","classes","TimerFrameRed","TimerFrame","App","useState","number","setNumber","ButtonFrame","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qMAsBA,SAASA,EAAMC,GACV,OAAO,qBAAKC,UAA0B,IAAfD,EAAME,OAAYC,IAAQC,cAAcD,IAAQE,WAAhE,SAA4E,4BAAIL,EAAME,WAGnFI,MAnBf,WAAgB,IAAD,EAEeC,mBAAS,GAFxB,mBAENC,EAFM,KAEEC,EAFF,KAIX,OAEI,sBAAKR,UAAWE,IAAQG,IAAxB,UACI,cAACP,EAAD,CAAOG,OAAQM,IACf,sBAAKP,UAAWE,IAAQO,YAAxB,UACI,wBAAQC,QAAS,kBAAMF,EAAUD,EAAS,IAAII,SAAsB,IAAXJ,EAAzD,iBACA,wBAAQG,QAAS,kBAAMF,EAAU,IAAIG,SAAsB,IAAXJ,EAAhD,0BCHDK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,cAAgB,2BAA2B,YAAc,4B","file":"static/js/main.adf49949.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport classes from \"./App.module.css\";\n\ntype TimerType = {\n    digits: number\n}\n\nfunction App() {\n\n    let [number, setNumber] = useState(0)\n\n    return (\n\n        <div className={classes.App}>\n            <Timer digits={number}/>\n            <div className={classes.ButtonFrame}>\n                <button onClick={() => setNumber(number + 1)} disabled={(number === 5)}>Inc</button>\n                <button onClick={() => setNumber(0)} disabled={(number === 0)}>Reset</button>\n            </div>\n        </div>\n    );\n}\nfunction Timer(props: TimerType) {\n     return <div className={props.digits===5? classes.TimerFrameRed:classes.TimerFrame}><b>{props.digits}</b></div>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ylwe\",\"TimerFrame\":\"App_TimerFrame__1VCH0\",\"TimerFrameRed\":\"App_TimerFrameRed__1Ismy\",\"ButtonFrame\":\"App_ButtonFrame__3C1pv\"};"],"sourceRoot":""}